import React from 'react';
import type { BaseMessage } from '@sendbird/chat/message';
import type { Action, ComponentsUnion } from '@sendbird/uikit-message-template';
export type MessageContextProps = React.PropsWithChildren<{
    message: BaseMessage;
    handleWebAction?(event: React.SyntheticEvent, action: Action, message: BaseMessage): null;
    handleCustomAction?(event: React.SyntheticEvent, action: Action, message: BaseMessage): null;
    handlePredefinedAction?(event: React.SyntheticEvent, action: Action, message: BaseMessage): null;
    /**
     * @internal DO NOT USE THIS, this is for internal use only.
     * This interface allows for detecting and injecting highlight styles into areas that include variables.
     */
    highlight?: {
        getContainerClassName?(raw: ComponentsUnion['properties']): string;
        getContainerInlineStyle?(raw: ComponentsUnion['properties']): React.CSSProperties;
        renderText?(text: string): React.ReactNode;
    };
}>;
export type MessageContextInterface = Omit<MessageContextProps, 'children'>;
declare const MessageProvider: ({ message, handleWebAction, handleCustomAction, handlePredefinedAction, highlight, children, }: MessageContextProps) => React.JSX.Element;
declare const useMessageContext: () => MessageContextInterface;
export { MessageProvider, useMessageContext };
