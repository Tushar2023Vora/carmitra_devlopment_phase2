import React, { type ForwardedRef, ReactElement } from 'react';

import { FlexSizeSpecValue, type MessageTemplateProps, defaultProperties } from '@sendbird/uikit-message-template';

import type { ReactParsedProperties } from '../../styles';
import { useCarousel } from './useCarousel';

interface CarouselProps extends React.HTMLAttributes<HTMLDivElement> {
  children: ReactElement<MessageTemplateProps>[];
  style?: ReactParsedProperties;
  spacing?: number;
  maxChildWidth?: number;
  inlineStyle?: React.CSSProperties;
}

export const RMTCarousel = ({
  children,
  style,
  spacing = defaultProperties.carousel.style.spacing,
  maxChildWidth = defaultProperties.carousel.style.maxChildWidth,
  inlineStyle,
  ...props
}: CarouselProps): ReactElement => {
  const { paddingInlineStart = 0, paddingInlineEnd = 0, ...restStyle } = style ?? {};
  const { carouselRef, childrenRefs, handlers } = useCarousel({
    spacing,
    childrenLength: children.length,
    paddingInlineStart: Number(paddingInlineStart),
    paddingInlineEnd: Number(paddingInlineEnd),
  });

  return (
    <div
      {...handlers}
      ref={carouselRef}
      style={{ ...restStyle, gap: spacing, width: '100%', overflow: 'visible', ...inlineStyle }}
      {...props}
    >
      {children.map((item, index) => (
        <RMTCarouselChild ref={childrenRefs.current[index]} key={index} maxChildWidth={maxChildWidth}>
          {item}
        </RMTCarouselChild>
      ))}
    </div>
  );
};

interface CarouselChildProps {
  maxChildWidth: number;
  children: ReactElement<MessageTemplateProps>;
}
const RMTCarouselChild = React.forwardRef(function CarouselChild(
  { maxChildWidth, children }: CarouselChildProps,
  ref: ForwardedRef<HTMLDivElement>,
) {
  const maxWidth = shouldSetMaxChildWidth(children.props, maxChildWidth) ? maxChildWidth : 'fit-content';

  return (
    <div ref={ref} style={{ maxWidth, width: '100%', flexShrink: 0, overflow: 'hidden', userSelect: 'none' }}>
      {children}
    </div>
  );
});

// Note: Set the maxChildWidth because it's impossible to determine the maximum width of items in the Carousel Child template when they have FillParent
function shouldSetMaxChildWidth(props: MessageTemplateProps, maxChildWidth: number) {
  return !!props.templateItems.find((it) => {
    const width = it.width ?? defaultProperties.view.size.width;
    const hasFillWidth = width.type === 'flex' && width.value === FlexSizeSpecValue.FillParent;
    const overMaxChildWidth = width.type === 'fixed' && width.value >= maxChildWidth;
    return hasFillWidth || overMaxChildWidth;
  });
}
