import { Layout, createParser } from '@sendbird/uikit-message-template';

import {
  type ReactParsedProperties,
  getDefaultStyles,
  setAlign,
  setImageAspectRatio,
  setImageStyle,
  setTextAlign,
  setTextStyle,
  setViewProps,
} from '../styles';

export const parser = createParser<ReactParsedProperties>({
  mapBoxProps(props, options) {
    const styles = getDefaultStyles();

    setViewProps(styles, props, options);
    setAlign(styles, props.layout, props.align);

    return styles;
  },
  mapTextProps(props, options) {
    const styles = getDefaultStyles({ whiteSpace: 'pre-line', wordBreak: 'break-word' });

    // Better not set flex 1 to text
    setViewProps(styles, props, options);
    setTextStyle(styles, props, options);
    setAlign(styles, Layout.Row, props.align);
    setTextAlign(styles, props.align?.horizontal);

    return styles;
  },
  mapImageProps(props, options) {
    const styles = getDefaultStyles();

    setViewProps(styles, props, options);
    setImageStyle(styles, props.imageStyle);
    setImageAspectRatio(styles, props);

    return styles;
  },
  mapTextButtonProps(props, options) {
    const styles = getDefaultStyles({ whiteSpace: 'pre-line', alignItems: 'center', justifyContent: 'center' });
    setViewProps(styles, props, options);
    setTextStyle(styles, props, options);

    return styles;
  },
  mapImageButtonProps(props, options) {
    const styles = getDefaultStyles();

    setViewProps(styles, props, options);
    setImageStyle(styles, props.imageStyle);
    setImageAspectRatio(styles, props);

    return styles;
  },
  mapCarouselProps(props, options) {
    const styles = getDefaultStyles();
    setViewProps(styles, props, options);
    styles['paddingBlockStart'] = props.viewStyle?.padding?.top;
    styles['paddingBlockEnd'] = props.viewStyle?.padding?.bottom;
    styles['paddingInlineStart'] = props.viewStyle?.padding?.left;
    styles['paddingInlineEnd'] = props.viewStyle?.padding?.right;
    return styles;
  },
});
