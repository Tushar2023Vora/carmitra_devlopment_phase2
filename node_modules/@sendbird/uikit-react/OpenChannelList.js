import React__default from 'react';
import OpenChannelListUI from './OpenChannelList/components/OpenChannelListUI.js';
import { O as OpenChannelListProvider } from './chunks/bundle-Bhe0JUc_.js';
import './OpenChannelList/components/OpenChannelPreview.js';
import './chunks/bundle-C-uQGUtK.js';
import './chunks/bundle-BcmcHhQv.js';
import './ui/ImageRenderer.js';
import './chunks/bundle-D9zEvquw.js';
import './chunks/bundle-DzW36hCC.js';
import './ui/Icon.js';
import './chunks/bundle-BtftT-cX.js';
import './chunks/bundle-HJB6-gWU.js';
import './ui/PlaceHolder.js';
import './chunks/bundle-DEkOOCXV.js';
import './chunks/bundle-CHCBafXl.js';
import './ui/Loader.js';
import './ui/IconButton.js';
import './CreateOpenChannel.js';
import './CreateOpenChannel/components/CreateOpenChannelUI.js';
import './ui/Button.js';
import './chunks/bundle-CW7sp9Ld.js';
import 'react-dom';
import './chunks/bundle-CPtt7fnf.js';
import './chunks/bundle-BJ2mapxw.js';
import './chunks/bundle-BmiTBgG1.js';
import './chunks/bundle-nSggTugx.js';
import './chunks/bundle-D0HLMr8A.js';
import '@sendbird/chat';
import '@sendbird/chat/groupChannel';
import '@sendbird/chat/openChannel';
import './ui/Input.js';
import './ui/TextButton.js';
import './chunks/bundle-CLpNliIV.js';
import './CreateOpenChannel/context.js';
import './chunks/bundle-DVZRgyYI.js';

function OpenChannelList(_a) {
    var 
    // provider
    className = _a.className, queries = _a.queries, onChannelSelected = _a.onChannelSelected, 
    // ui
    renderHeader = _a.renderHeader, renderChannelPreview = _a.renderChannelPreview, renderPlaceHolderEmpty = _a.renderPlaceHolderEmpty, renderPlaceHolderError = _a.renderPlaceHolderError, renderPlaceHolderLoading = _a.renderPlaceHolderLoading;
    return (React__default.createElement(OpenChannelListProvider, { className: className, queries: queries, onChannelSelected: onChannelSelected },
        React__default.createElement(OpenChannelListUI, { renderHeader: renderHeader, renderChannelPreview: renderChannelPreview, renderPlaceHolderEmpty: renderPlaceHolderEmpty, renderPlaceHolderError: renderPlaceHolderError, renderPlaceHolderLoading: renderPlaceHolderLoading })));
}

export { OpenChannelList as default };
//# sourceMappingURL=OpenChannelList.js.map
