'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../chunks/bundle-DdEJUQ3V.js');
var React = require('react');
var uikitTools = require('@sendbird/uikit-tools');
var index = require('../../chunks/bundle-BUPw_lsA.js');
var utils = require('../../chunks/bundle-Dlhvq6qJ.js');
var MessageView = require('../../chunks/bundle-DB678BVx.js');
var GroupChannel_components_FileViewer = require('./FileViewer.js');
var GroupChannel_components_RemoveMessageModal = require('./RemoveMessageModal.js');
var _const = require('../../chunks/bundle-JR9-1BeM.js');
var GroupChannelProvider = require('../../chunks/bundle-DowCzqdD.js');
var useSendbird = require('../../chunks/bundle-D6mmpicY.js');
require('@sendbird/chat/groupChannel');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-DFNM8KjC.js');
require('../../chunks/bundle-CEY5QNl7.js');
require('../../chunks/bundle-BAy4Z2n_.js');
require('../../chunks/bundle-DWBI0JnU.js');
require('../../chunks/bundle-CyQuENXQ.js');
require('../../chunks/bundle-C7WnFc5I.js');
require('../../chunks/bundle-REYf6P50.js');
require('../../chunks/bundle-BE-eUbjS.js');
require('../../Message/hooks/useDirtyGetMentions.js');
require('../../ui/DateSeparator.js');
require('../../chunks/bundle-qNUnRJ-F.js');
require('../../chunks/bundle-D66YmzI6.js');
require('../../ui/MessageInput.js');
require('../../chunks/bundle-Dc6k4jof.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../chunks/bundle-CTz3qwYY.js');
require('dompurify');
require('../../chunks/bundle-fVfMBori.js');
require('../../chunks/bundle-n_eAVYbo.js');
require('../../chunks/bundle-L5zC6xWM.js');
require('../../ui/Icon.js');
require('../../chunks/bundle-kfqOElgK.js');
require('../../chunks/bundle-WPa3lxwD.js');
require('../../ui/MessageContent.js');
require('../../chunks/bundle-Bv2i41gB.js');
require('../../ui/Loader.js');
require('../../chunks/bundle-NjC1jT1F.js');
require('../../chunks/bundle-oo08qJuT.js');
require('../../chunks/bundle-v95Xmjt9.js');
require('../../chunks/bundle-BWLRRAFI.js');
require('react-dom');
require('@sendbird/chat');
require('@sendbird/chat/openChannel');
require('../../ui/SortByRow.js');
require('../../chunks/bundle-BeuUz2c0.js');
require('../../chunks/bundle-HERYYUXZ.js');
require('../../ui/MessageItemReactionMenu.js');
require('../../ui/ImageRenderer.js');
require('../../ui/ReactionButton.js');
require('../../chunks/bundle-y6-ks46c.js');
require('../../chunks/bundle-BmtTyZzB.js');
require('../../ui/EmojiReactions.js');
require('../../ui/ReactionBadge.js');
require('../../ui/BottomSheet.js');
require('../../hooks/useModal.js');
require('../../chunks/bundle-OV9QvRP8.js');
require('../../ui/UserListItem.js');
require('../../chunks/bundle-H44hyvFN.js');
require('../../chunks/bundle-B4Oz6Uwy.js');
require('../../chunks/bundle-CHvo3SHq.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/UserProfile.js');
require('../../sendbirdSelectors.js');
require('../../chunks/bundle-CyJimqL9.js');
require('../../ui/Tooltip.js');
require('../../ui/TooltipWrapper.js');
require('../../Message/context.js');
require('../../chunks/bundle-DFpSNLcN.js');
require('../../ui/AdminMessage.js');
require('../../ui/QuoteMessage.js');
require('../../chunks/bundle-Ca4uPUG4.js');
require('@sendbird/chat/message');
require('../../ui/MobileMenu.js');
require('../../ui/ThreadReplies.js');
require('../../chunks/bundle-CejczCsL.js');
require('../../ui/OGMessageItemBody.js');
require('../../chunks/bundle-D1jvTvhG.js');
require('../../ui/MentionLabel.js');
require('../../ui/LinkLabel.js');
require('../../ui/TextMessageItemBody.js');
require('../../ui/FileMessageItemBody.js');
require('../../ui/TextButton.js');
require('../../chunks/bundle-BOXZxrtw.js');
require('../../ui/FileViewer.js');
require('../../chunks/bundle-C8vJRfhx.js');
require('../../ui/VoiceMessageItemBody.js');
require('../../ui/ProgressBar.js');
require('../../VoicePlayer/useVoicePlayer.js');
require('../../chunks/bundle-CWVSskOQ.js');
require('../../VoiceRecorder/context.js');
require('../../ui/PlaybackTime.js');
require('../../ui/ThumbnailMessageItemBody.js');
require('../../ui/UnknownMessageItemBody.js');
require('../../ui/TemplateMessageItemBody.js');
require('../../chunks/bundle-BrzJTkCk.js');
require('../../ui/FallbackTemplateMessageItemBody.tsx.js');
require('../../ui/LoadingTemplateMessageItemBody.tsx.js');
require('../../ui/MessageFeedbackFailedModal.js');
require('../../ui/FeedbackIconButton.js');
require('../../ui/MobileFeedbackMenu.js');
require('../../ui/MessageFeedbackModal.js');
require('../../ui/Input.js');
require('../../chunks/bundle-DYiDFr98.js');
require('./SuggestedReplies.js');
require('../../chunks/bundle-rpradL3a.js');
require('../../chunks/bundle-D2ybBuHx.js');
require('../../chunks/bundle-BrHynphF.js');
require('../../chunks/bundle-Bj7CL3aP.js');
require('../../chunks/bundle-u5TfAXpt.js');
require('../../chunks/bundle-kYn7Bizj.js');
require('../../chunks/bundle-DwuvGkzI.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);

var Message = function (props) {
    var state = useSendbird.useSendbird().state;
    var config = state.config, emojiManager = state.emojiManager;
    var _a = GroupChannelProvider.useGroupChannel(), _b = _a.state, loading = _b.loading, currentChannel = _b.currentChannel, animatedMessageId = _b.animatedMessageId, replyType = _b.replyType, threadReplySelectType = _b.threadReplySelectType, isReactionEnabled = _b.isReactionEnabled, nicknamesMap = _b.nicknamesMap, renderUserMentionItem = _b.renderUserMentionItem, filterEmojiCategoryIds = _b.filterEmojiCategoryIds, onQuoteMessageClick = _b.onQuoteMessageClick, onReplyInThreadClick = _b.onReplyInThreadClick, onMessageAnimated = _b.onMessageAnimated, onBeforeDownloadFileMessage = _b.onBeforeDownloadFileMessage, messages = _b.messages, markAsUnread = _b.markAsUnread, _c = _a.actions, toggleReaction = _c.toggleReaction, setQuoteMessage = _c.setQuoteMessage, setAnimatedMessageId = _c.setAnimatedMessageId, scrollToMessage = _c.scrollToMessage, updateUserMessage = _c.updateUserMessage, sendUserMessage = _c.sendUserMessage, resendMessage = _c.resendMessage, deleteMessage = _c.deleteMessage;
    var message = props.message;
    var initialized = !loading && Boolean(currentChannel);
    var shouldRenderSuggestedReplies = uikitTools.useIIFE(function () {
        var _a = config.groupChannel, enableSuggestedReplies = _a.enableSuggestedReplies, showSuggestedRepliesFor = _a.showSuggestedRepliesFor;
        // Use `allMessages[allMessages.length - 1]` instead of `currentGroupChannel.lastMessage`
        // because lastMessage is not updated when **Bot** sends messages
        var lastMessageInView = messages[messages.length - 1];
        var hasUnsentMessage = index.isSendableMessage(lastMessageInView) && (lastMessageInView === null || lastMessageInView === void 0 ? void 0 : lastMessageInView.sendingStatus) !== 'succeeded';
        var showSuggestedReplies = showSuggestedRepliesFor === 'all_messages'
            ? true
            : message.messageId === (lastMessageInView === null || lastMessageInView === void 0 ? void 0 : lastMessageInView.messageId);
        return enableSuggestedReplies && index.getSuggestedReplies(message).length > 0 && !hasUnsentMessage && showSuggestedReplies;
    });
    return (React__default.default.createElement(MessageView.MessageView, _tslib.__assign({}, props, { channel: currentChannel, emojiContainer: emojiManager === null || emojiManager === void 0 ? void 0 : emojiManager.emojiContainer, editInputDisabled: !initialized
            || utils.isDisabledBecauseFrozen(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined)
            || utils.isDisabledBecauseMuted(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined)
            || !config.isOnline, shouldRenderSuggestedReplies: shouldRenderSuggestedReplies, isReactionEnabled: isReactionEnabled !== null && isReactionEnabled !== void 0 ? isReactionEnabled : false, replyType: replyType !== null && replyType !== void 0 ? replyType : 'NONE', threadReplySelectType: threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : _const.ThreadReplySelectType.PARENT, nicknamesMap: nicknamesMap, renderUserMentionItem: renderUserMentionItem, filterEmojiCategoryIds: filterEmojiCategoryIds, scrollToMessage: scrollToMessage, toggleReaction: toggleReaction, setQuoteMessage: setQuoteMessage, onQuoteMessageClick: onQuoteMessageClick, onReplyInThreadClick: onReplyInThreadClick, sendUserMessage: sendUserMessage, updateUserMessage: updateUserMessage, resendMessage: resendMessage, deleteMessage: deleteMessage, markAsUnread: markAsUnread, animatedMessageId: animatedMessageId, setAnimatedMessageId: setAnimatedMessageId, onMessageAnimated: onMessageAnimated, renderFileViewer: function (props) { return React__default.default.createElement(GroupChannel_components_FileViewer.FileViewer, _tslib.__assign({}, props)); }, renderRemoveMessageModal: function (props) { return React__default.default.createElement(GroupChannel_components_RemoveMessageModal.RemoveMessageModal, _tslib.__assign({}, props)); }, usedInLegacy: false, onBeforeDownloadFileMessage: onBeforeDownloadFileMessage })));
};

exports.Message = Message;
exports.default = Message;
//# sourceMappingURL=Message.js.map
