import { _ as __assign, a as __awaiter, b as __generator } from '../../chunks/bundle-BcmcHhQv.js';
import React__default from 'react';
import { u as useGroupChannel } from '../../chunks/bundle-CstkgY4y.js';
import { F as FileViewerView } from '../../chunks/bundle-D11FZYlw.js';
import { u as useSendbird } from '../../chunks/bundle-BmiTBgG1.js';
import '@sendbird/chat/message';
import '@sendbird/chat/groupChannel';
import '@sendbird/uikit-tools';
import '../../chunks/bundle-BTe57HMb.js';
import '../../chunks/bundle-D7ZoQl6B.js';
import '../../chunks/bundle-nSggTugx.js';
import '../../chunks/bundle-D0HLMr8A.js';
import '../../chunks/bundle-DYayy0Kj.js';
import '../../chunks/bundle-DAJLIQZw.js';
import '../../chunks/bundle-lHyjMBHE.js';
import '../../chunks/bundle-C9cE3NlS.js';
import '../../chunks/bundle-DVZRgyYI.js';
import '../../chunks/bundle-X8Nj-iGV.js';
import '../../chunks/bundle-D9zEvquw.js';
import '@sendbird/chat';
import '../../chunks/bundle-BFv38Gwl.js';
import 'react-dom';
import '../../chunks/bundle-C-uQGUtK.js';
import '../../ui/ImageRenderer.js';
import '../../chunks/bundle-DzW36hCC.js';
import '../../ui/Icon.js';
import '../../chunks/bundle-BtftT-cX.js';
import '../../chunks/bundle-HJB6-gWU.js';
import '../../chunks/bundle-AOpqwRaJ.js';
import '../../utils/message/getOutgoingMessageState.js';
import '../../chunks/bundle-CKjna3wg.js';
import '../../chunks/bundle-RFPu_1HD.js';
import '../../hooks/useModal.js';
import '../../chunks/bundle-CW7sp9Ld.js';
import '../../chunks/bundle-DEkOOCXV.js';
import '../../chunks/bundle-CHCBafXl.js';
import '../../chunks/bundle-CPtt7fnf.js';
import '../../ui/IconButton.js';
import '../../ui/Button.js';
import '../../chunks/bundle-BJ2mapxw.js';
import '@sendbird/chat/openChannel';

var FileViewer = function (props) {
    var _a = useGroupChannel(), onBeforeDownloadFileMessage = _a.state.onBeforeDownloadFileMessage, deleteMessage = _a.actions.deleteMessage;
    var logger = useSendbird().state.config.logger;
    return (React__default.createElement(FileViewerView, __assign({}, props, { deleteMessage: deleteMessage, onDownloadClick: function (e) { return __awaiter(void 0, void 0, void 0, function () {
            var allowDownload, err_1;
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!onBeforeDownloadFileMessage)
                            return [2 /*return*/];
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, onBeforeDownloadFileMessage({ message: props.message })];
                    case 2:
                        allowDownload = _c.sent();
                        if (!allowDownload) {
                            e.preventDefault();
                            (_a = logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'FileViewer: Not allowed to download.');
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _c.sent();
                        (_b = logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'FileViewer: Error occurred while determining download continuation:', err_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); } })));
};

export { FileViewer, FileViewer as default };
//# sourceMappingURL=FileViewer.js.map
